# includes some misc events
# racetrait.1 to racetrait.10 : applies vital species-specific traits to those who are supposed to have them
# racetrait.20 : If you are plotting to kill unkillable characters, this event pops up and cancels the plot_kill_character
# racetrait.21 : Huorn Defence force for Fangorn and The Old Forest
# racetrait.24 to racetrait.26 : Generates courtiers for Elven Rulers


namespace = racetrait



## The character is born from an Elf and a Dwarf ##
character_event = {
	id = racetrait.3
	title = EVTNAMEracetrait.2
	desc = EVTDESCracetrait.2
	picture = "GFX_evt_choice"

	min_age = 25	   
				   
	is_triggered_only = yes
	
	trigger = {		
		trait = elf
		trait = dwarven	
		NOT = { has_character_flag = made_choice }
	}

		
	immediate = {
		remove_trait = elf
		remove_trait = dwarven
		set_character_flag = made_choice
	}
		
	option = { 
			  name = EVTOPTAracetrait.2  ## I'm an Eldar !
			  add_trait = elf
	}
	option = {
			  name = EVTOPTBracetrait.2  ## I'm a Dwarf !
			  add_trait = dwarven
	}
}





## The characters is an Ent ##
character_event = {
	id = racetrait.6
	title = EVTNAMEracetrait.1
	desc = EVTDESCracetrait.1
	picture = "GFX_evt_coronation"

	is_triggered_only = yes
	
	trigger = {
		culture = culture_entish
		NOT = { trait = ent }
	}


	option = {
	name = EVTOPTAracetrait.1
	add_trait = ent
	}
}

## The characters is an Orc ##
character_event = {
   id = racetrait.5
   # title = EVTNAMEracetrait.1
   # desc = EVTDESCracetrait.1
   # picture = "GFX_evt_coronation"
   
   hide_window = yes

   is_triggered_only = yes
   
	trigger = {
		OR = {
			mep_orc_goblin_culture = yes
			culture = culture_troll
		}	
		NOT = { trait = half_orc }
		NOT = { trait = orc }
	}


	option = {
	    name = EVTOPTAracetrait.1
	    add_trait = orc #Formerly orkish but orkish is a death trait.
	}
}

## The characters is a spider ##
character_event = {
	id = racetrait.7
	# title = EVTNAMEracetrait.1
	# desc = EVTDESCracetrait.1
	# picture = "GFX_evt_coronation"
	
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		religion_group = religion_group_ungoliant
		NOT = { trait = spider }
	}

	option = {
		name = EVTOPTAracetrait.1
		add_trait = spider
	}
}

## The character is an Hobbit ##
character_event = {
    id = racetrait.8
	# title = EVTNAMEracetrait.1
	# desc = EVTDESCracetrait.1
	# picture = "GFX_evt_dwarves"
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		culture_group = culture_group_halfling		
		NOT = { trait = hobbit }
	}


	option = {
		# name = EVTOPTAracetrait.1
		add_trait = hobbit
	}
}

## The character is an Eagle ##
character_event = {
    id = racetrait.9
	# title = EVTNAMEracetrait.1
	# desc = EVTDESCracetrait.1
	# picture = "GFX_evt_dwarves"
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		culture = culture_eagles	
		NOT = { trait = eagle }
	}


	option = {
		# name = EVTOPTAracetrait.1
		add_trait = eagle
	}
}


# some species/races or more or less unkillable by normal means
character_event = {
	id = racetrait.20
	title = EVTTITracetrait.20
	desc = EVTDESCracetrait.20
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_intrigue
	is_part_of_plot = yes
	
	trigger = {
		OR = {
			has_plot = plot_kill_character
			has_plot = plot_kill_spouse
		}
		
		plot_target_char = {
			mep_should_be_unkillable_trigger = yes
		}
		NOT = { has_character_flag = murder_in_motion }
	}
	
	mean_time_to_happen = {
		months = 12
	}
	
	immediate = {
		plot_target_char = {
			save_event_target_as = mep_immortal_victim_target
		}
	}
	
	option = {
		name = EVTOPTAracetrait.20
		if = {
			limit = { has_plot = plot_kill_character }
			cancel_plot = plot_kill_character
		}
		if = {
			limit = { has_plot = plot_kill_spouse }
			cancel_plot = plot_kill_spouse
		}
	}
}

# To avoid creating yet another file, I've decided to place the 'Huorn Defence Force' event here
character_event = {
	id = racetrait.21
	title = EVTTITracetrait.21
	desc = EVTDESCracetrait.21
	picture = GFX_evt_oldmanwillow
	border = GFX_event_normal_frame_war
	only_playable = yes
	war = yes
	
	trigger = {
		# is Ent, Huorn, or Tom Bombadil
		OR = {
			religion_group = religion_group_enyd
			culture = culture_enigma
		}
		# ruling Fangorn, or the old forest
		OR = {
			has_landed_title = c_fangorn
			has_landed_title = c_derndingle
			has_landed_title = d_fangorn
			has_landed_title = c_the_old_forest
		}
		# is under attack (I think this is all that is necessary)
		is_primary_war_defender = yes
		# I'm not sure If I should put in some flag to block repeats or not.
	}
	
	mean_time_to_happen = {
		months = 3
	}
	
	option = {
		name = EVTOPTAracetrait.21
		# Creates defensive Huorn Army
		custom_tooltip = {
			text = TT_MAKE_HUORN_ARMY
			
			create_random_soldier = {
				random_traits = yes
				dynasty = none
				religion = religion_enyd
				culture = culture_huorn
				trait = ent
				trait = zealous
				trait = unyielding_leader
				trait = rough_terrain_leader
				trait = brilliant_strategist
				female = no
				age = 3333
				immortal_age = 50
			}
			capital_scope = {
				new_character = {
					spawn_unit = {
						province = PREV
						owner = PREVPREV
						disband_on_peace = yes
						attrition = 0
						maintenance_multiplier = 0.1
						troops = {
							heavy_infantry = { 700 700}
							light_infantry = {1000 1000}
							pikemen = { 700 700}
							archers = {1000 1000}
						}
						reinforces = yes
						reinforce_rate_multiplier = 0.1						
					}
				}
			}
		}
		# the attacked ruler is k_fangorn, create ANOTHER defensive army
		if = {
			limit = { has_landed_title = k_fangorn }
			custom_tooltip = {
				text = TT_MAKE_HUORN_ARMY
				
				create_random_soldier = {
					random_traits = yes
					dynasty = none
					religion = religion_enyd
					culture = culture_huorn
					trait = ent
					trait = unyielding_leader
					trait = rough_terrain_leader
					trait = brilliant_strategist
					female = no
					age = 4171
					immortal_age = 55
				}
				capital_scope = {
					new_character = {
						spawn_unit = {
							province = PREV
							owner = PREVPREV
							disband_on_peace = yes
							attrition = 0
							maintenance_multiplier = 0.1
							troops = {
								heavy_infantry = { 700 700}
								light_infantry = {1000 1000}
								pikemen = { 700 700}
								archers = {1000 1000}
							}
							reinforces = yes
							reinforce_rate_multiplier = 0.1						
						}
					}
				}
			}
		}
		# just in case, we also boot morale
		any_army = { morale = +1 }
		
	}
}

#----------------------------------------------------------------
# Generates courtiers for elven rulers - The random version
character_event = {
	id = racetrait.24
	religion_group = religion_group_eldar
	
	hide_window = yes
	
	trigger = {
		# is_patrician = no
		higher_real_tier_than = baron
		capital_scope = {
			mep_make_random_elf_culture = yes
		}
	}
	
	mean_time_to_happen = {
		days = 200
	}

	option = {
		set_variable = { which = mep_courtiers_tomake value = 11 }
		mep_generate_eleven_courtiers_effect = yes
	}
}

# Generates courtiers for elven rulers - The random version for baron-level characters
character_event = {
	id = racetrait.26
	only_rulers  = yes
	religion_group = religion_group_eldar
	
	hide_window = yes
	
	trigger = {
		religion_group = religion_group_eldar
		OR = {
			is_patrician = yes
			AND = {
				is_landed = yes
				tier = baron
			}
		}
		capital_scope = {
			mep_make_random_elf_culture = yes
		}
	}
	
	mean_time_to_happen = {
		days = 365
	}

	option = {
		set_variable = { which = mep_courtiers_tomake value = 2 }
		mep_generate_eleven_courtiers_effect = yes
	}
}
# Meant to be launched on_chronicle_start to provide random elf courtiers for all elven rules
# of count level or above
character_event = {
	id = racetrait.25
	
	hide_window = yes
	
	is_triggered_only = yes
	
	option = {
		any_independent_ruler = {
			# generating ruler courtiers
			if = {
				limit = {
					higher_real_tier_than = baron
					religion_group = religion_group_eldar
					capital_scope = {
						mep_make_random_elf_culture = yes
					}
				}
				set_variable = { which = mep_courtiers_tomake value = 11 }
				mep_generate_eleven_courtiers_effect = yes
			}
			# generating vassal courtiers
			any_realm_lord = {
				if = {
					limit = {
						higher_real_tier_than = baron
						religion_group = religion_group_eldar
						capital_scope = {
							mep_make_random_elf_culture = yes
						}
					}
					set_variable = { which = mep_courtiers_tomake value = 11 }
					mep_generate_eleven_courtiers_effect = yes
				}
			}
		}
		# also, we have to do this again for the player...
		ROOT = {
			# generating ruler courtiers
			if = {
				limit = {
					higher_real_tier_than = baron
					religion_group = religion_group_eldar
					capital_scope = {
						mep_make_random_elf_culture = yes
					}
				}
				set_variable = { which = mep_courtiers_tomake value = 11 }
				mep_generate_eleven_courtiers_effect = yes
			}
			# generating vassal courtiers
			any_realm_lord = {
				if = {
					limit = {
						higher_real_tier_than = baron
						religion_group = religion_group_eldar
						capital_scope = {
							mep_make_random_elf_culture = yes
						}
					}
					set_variable = { which = mep_courtiers_tomake value = 11 }
					mep_generate_eleven_courtiers_effect = yes
				}
			}
		}
		
	}
}

	
	