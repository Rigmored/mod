#-----------------------------------------------------
# MEP : Last Alliance Events
#-----------------------------------------------------
# Global Flags:
# mep_start_lastalliance, mep_lastalliance_done1, mep_lastalliance_done2
# mep_lastalliance_offensive, mep_lastalliance_counterstrike1, mep_lastalliance_counterstrike2,
# mep_lastalliance_saurondefeated, mep_lastalliance_sauronwon
# Character Flgas:
# mep_lastalliance_leader, mep_lastalliance_joined
#------------------------------------------------------------
# Events 0 to 8 : Setting up the alliance (with notifications)
# Events 10 to x : Declare war and send notifications
# Events 20 to 25 : Inherit Alliance
# Events 40 to 67 : Duel with Sauron/Mordor Leader, and aftermath
# Events 70 + : End of the war and cleanup

namespace = lastalliance
#------------------------------------------------------------
# Event 0: launched by Elendil (or the equivalent) via decision, present info and a choice to go ahead or not.
long_character_event = {
	id = lastalliance.0
	title = EVTTITlastalliance.0
	desc = EVTDESClastalliance.0
	picture = GFX_evt_sauronreturns
	
	is_triggered_only = yes
	
	# Send the requests to join
	option = {
		name = EVTOPTAlastalliance.0
		hidden_tooltip = {
			set_global_flag = mep_start_lastalliance
			set_variable = { which = mep_lastalliance_joined_counter value = 0 }
		}
		# The call is sent to 'good' independent rulers (except for ultra-isolationists )
		custom_tooltip = {
			text = TT_MEP_LASTALLIANCE0_SENDMESSAGE
			any_independent_ruler = {
				limit = {
					mep_is_good_side_trigger = yes
					NOT = { religion_group = religion_group_enyd }
					NOT = { culture = culture_valar }
					NOT = { culture = culture_enigma }
					higher_real_tier_than  = count
					mercenary = no
				}
				character_event = { id = lastalliance.1  days = 6 random = 4} 
			}
		}
		wealth = -50
		# schedule event that will check the results of the messages
		hidden_tooltip = {
			character_event = { id = lastalliance.4  days = 20 }
		}
		
	}
	
	# I don't feel like that now...
	option = {
		trigger = { ai = no }
		name = EVTOPTBlastalliance.0
	}
	
}
#------------------------------------------------------------
# Event 1 : event sent to good side independent leaders to join last alliance or not.
character_event = {
	id = lastalliance.1
	title = EVTTITlastalliance.1
	desc = EVTDESClastalliance.1
	picture = GFX_evt_sauronreturns
	
	is_triggered_only = yes
	
	# yes, join
	option = {
		name = EVTOPTAlastalliance.1
		trigger = {
			is_alive = yes
			FROM = { is_alive = yes } 
		}
		# AI never joins if their opinion of the caller is less than -20
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				NOT = { opinion = { who = FROM value = -20 } }
			}
		}
		FROM = {
			character_event = { id = lastalliance.2 days = 6  random = 3}
		}

		
	}
	
	# no, don't join
	option = {
		name = EVTOPTBlastalliance.1
		trigger = {
			is_alive = yes
			FROM = { is_alive = yes } 
		}
		# AI always joins if their opinion of the caller is better than 30
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				opinion = { who = FROM value = 30 }
			}
		}
		FROM = {
			character_event = { id = lastalliance.3 days = 6 random = 3 }
		}
	}
	
	# The caller has died while this message reached you
	option = {
		name = EVTOPTClastalliance.1
		trigger = {
			is_alive = yes
			FROM = { is_alive = no } 
		}
		# do nothing except clear the flag
		clr_global_flag = mep_start_lastalliance
	}
	
}
#------------------------------------------------------------
# Events 2 and 3 : Positive or negative response to Request
# Event 2 : Response, Yes, X will join!
character_event = {
	id = lastalliance.2
	title = EVTTITlastalliance.2
	desc = EVTDESClastalliance.2
	picture = GFX_oath_of_eorl
	
	is_triggered_only = yes
	
	# good
	option = {
		name = EVTOPTAlastalliance.2
		trigger = { is_alive = yes } # not sure if this is necessary...
		# set up the alliance...
		FROM = {
			opinion = {
				modifier = in_non_aggression_pact
				who = ROOT
				years = 20 #Set duration
			}
			reverse_opinion = {
				modifier = in_non_aggression_pact
				who = ROOT
				years = 20 #Set duration
			}
			add_alliance = { who = ROOT years = 20 } #Set duration
			hidden_tooltip = {
				set_character_flag = mep_lastalliance_joined
			}
		}
		# perhaps add an extra opinion modifier here...
		# logging the response
		hidden_tooltip = {
			change_variable = { which = mep_lastalliance_joined_counter value = 1 }
		}
		
	}
	
	# just in case the proposer of the alliance dies...
	option = {
		name = EVTOPTBlastalliance.2
		trigger = { is_alive = no }
		# clear flags and stuff
		hidden_tooltip = {
			clr_global_flag = mep_start_lastalliance
		}
	}
	
}
#------------------------------------------------------------
# Event 3 : Response, NO, X will NOT join
character_event = {
	id = lastalliance.3
	title = EVTTITlastalliance.3
	desc = EVTDESClastalliance.3
	picture = GFX_evil_king
	
	is_triggered_only = yes
	
	# Darn!
	option = {
		name = EVTOPTAlastalliance.3
		trigger = { is_alive = yes } # not sure if this is necessary...
		# perhaps add an extra opinion modifier here...
	}
	
	# just in case the propoer of the alliance dies...
	option = {
		name = EVTOPTBlastalliance.3
		trigger = { is_alive = no }
		# clear flags and stuff
		hidden_tooltip = {
			clr_global_flag = mep_start_lastalliance
		}
	}
}
#------------------------------------------------------------
# Event 4 : fires to check what the results of the requests are
character_event = {
	id = lastalliance.4
	hide_window = yes
	
	is_triggered_only = yes
	
	# calculating the effects
	immediate = {
		clr_global_flag = mep_start_lastalliance
		# you need Gil-Galad (or his successor) and 2 others for a successful alliance-forming
		if = {
			limit = {
				check_variable = { which = mep_lastalliance_joined_counter value = 3 }
				e_noldor = {
					has_holder = yes
					holder_scope = { has_character_flag = mep_lastalliance_joined }
				}
			}
			set_global_flag = mep_lastalliance_done1
		}
	}
	
	# Successful (and still alive)
	option = {
		trigger = {
			is_alive = yes
			has_global_flag = mep_lastalliance_done1
		} 
		character_event = { id = lastalliance.5 }
	}
	
	# Unsuccessful (and still alive)
	option = {
		trigger = {
			is_alive = yes
			NOT = { has_global_flag = mep_lastalliance_done1 }
		}
		# clear flags and stuff
		any_independent_ruler = {
			limit = { has_character_flag = mep_lastalliance_joined }
			clr_character_flag = mep_lastalliance_joined
			character_event = { id = lastalliance.7  days =  6 random = 3 }
		}
		character_event = { id = lastalliance.6 }
	}
	
	# Dead
	option = {
		trigger = { is_alive = no }
		# clear flags and stuff
		hidden_tooltip = {
			clr_global_flag = mep_start_lastalliance
			any_independent_ruler = {
				limit = { has_character_flag = mep_lastalliance_joined }
				clr_character_flag = mep_lastalliance_joined
				character_event = { id = lastalliance.7  days = 6 random = 3 }
			}
		}
	}
}

#------------------------------------------------------------
# Event 5, The 'Last Alliance' is go
character_event = {
	id = lastalliance.5
	title = EVTTITlastalliance.5
	desc = EVTDESClastalliance.5
	picture = GFX_elf_meeting
	
	is_triggered_only = yes
	
	# Bring peace and prepare for war
	option = {
		name = EVTOPTAlastalliance.5
		# Making sure the alliance launcher (probably Elendil) and Gil-Galad/E-Noldor are still allive
		trigger = {
			is_alive = yes # not sure if this is necessary...
			e_noldor = {
				has_holder = yes
				holder_scope = {
					has_character_flag = mep_lastalliance_joined
				}
			}
		} 
		# eliminating wars among alliance members...
		custom_tooltip = {
			text = TT_MEP_LASTALLIANCE5_MAKEPEACE
			hidden_tooltip = {
				any_independent_ruler = {
					limit = { has_character_flag = mep_lastalliance_joined }
					any_independent_ruler = {
						limit = {
							has_character_flag = mep_lastalliance_joined
							NOR = {
								reverse_has_opinion_modifier = { who = PREV modifier = in_non_aggression_pact }
								has_opinion_modifier = { who = PREV modifier = in_non_aggression_pact }
							}
						}
						# we get here if the ruler has joined the alliance and does not have a non-aggression pact with PREV
						# enforcing peace if they are at war
						if = {  
							limit = { war_with = PREV }
							any_war = {
								limit = {
									OR = {
										any_attacker = { character = PREV }
										any_defender = { character = PREV }
									}
								}
								end_war = invalid
							}
						}
						# creating the non-aggression pact..
						opinion = {
							modifier = in_non_aggression_pact
							who = PREV
							years = 10 #Set duration
						}
						reverse_opinion = {
							modifier = in_non_aggression_pact
							who = PREV
							years = 10 #Set duration
						}
						# set_the_kings_peace = yes ??
					}
					character_event = { id = lastalliance.8 }
				}
			}
			
		}
		# final preps...
		wealth = 1000  # From donations
		hidden_tooltip = {
			clr_global_flag = mep_lastalliance_done1
			set_global_flag = mep_lastalliance_done2
			set_character_flag = mep_lastalliance_leader
		}
		
	}
	
	# just in case the proposer of the alliance, or Gil-Galad dies at just the wrong moment...
	option = {
		name = EVTOPTBlastalliance.5
		trigger = {
			OR = {
				is_alive = no
				e_noldor = {
					OR = {
						has_holder = no
						holder_scope = {
							NOT = { has_character_flag = mep_lastalliance_joined }
						}
					}
				}
			}
		}
		# clear flags
		hidden_tooltip = {
			clr_global_flag = mep_lastalliance_done1
			any_independent_ruler = {
				limit = { has_character_flag = mep_lastalliance_joined }
				clr_character_flag = mep_lastalliance_joined
				character_event = { id = lastalliance.7  days = 7 random = 3 }
			}
		}
	}
	
}
#------------------------------------------------------------
# Event 6, The 'Last Alliance' has failed to happen
character_event = {
	id = lastalliance.6
	title = EVTTITlastalliance.6
	desc = EVTDESClastalliance.6
	picture = GFX_evil_king
	
	is_triggered_only = yes
	
	# Your hopes have failed
	option = {
		name = EVTOPTAlastalliance.6
		hidden_tooltip = {
			add_character_modifier = { name = mep_lastalliance_failed  duration = 1825 }
		}
	}	
}
#------------------------------------------------------------
# Event 7 : Notification that the last alliance is aborted
character_event = {
	id = lastalliance.7
	title = EVTTITlastalliance.7
	desc = {
		trigger = { FROM = { is_alive = yes } }
		text = EVTDESClastalliance.7a
	}
	desc = {
		trigger = { FROM = { is_alive = no } }
		text = EVTDESClastalliance.7b
	}
	picture = GFX_evil_king
	
	is_triggered_only = yes
	
	# Unfortunate
	option = {
		name = EVTOPTAlastalliance.7
	}
	
}
#------------------------------------------------------------
# Event 8 : Notification that the last alliance is go
character_event = {
	id = lastalliance.8
	title = EVTTITlastalliance.8
	desc = EVTDESClastalliance.8
	picture = GFX_elf_meeting
	
	is_triggered_only = yes
	
	# Good
	option = {
		name = EVTOPTAlastalliance.8
	}
	
}
#------------------------------------------------------------
# an event is probably needed if the alliance leader dies, if e_noldor dies, or if sauron dies, before the war is started...
#======================================================================
# Event 10: launched by Elendil (or the equivalent) via decision, to start the anti-mordor war
character_event = {
	id = lastalliance.10
	title = EVTTITlastalliance.10
	desc = EVTDESClastalliance.10
	picture = GFX_evt_battle_scene
	
	is_triggered_only = yes
	
	# Go ahead
	option = {
		name = EVTOPTAlastalliance.10
		e_barad_dur = {
			holder_scope = {
				reverse_war = {
					target = PREVPREV 
					casus_belli = kingdom_good_attack_evil
					thirdparty_title = k_mordor
					infamy = 0
				}
			}
		}
		hidden_tooltip = {
			set_global_flag = mep_lastalliance_offensive
			clr_global_flag = mep_lastalliance_done2
		}
		
	}
	
	# I don't feel like that now...
	option = {
		trigger = { ai = no }
		name = EVTOPTBlastalliance.10
	}
	
}
#===========================================================================
# making certain character flags inheritable...
character_event = {
	id = lastalliance.20
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { year = 9000 }
	}
	
	# passing on some last alliance character flags (with events) on_death
	option = {
		trigger = {
			OR = {
				has_global_flag = mep_lastalliance_done2
				has_global_flag = mep_lastalliance_offensive
				has_global_flag = mep_lastalliance_counterstrike1
				has_global_flag = mep_lastalliance_counterstrike2
				NOT = { has_global_flag = mep_lastalliance_saurondefeated }
			}
			is_ruler = yes
			OR = {
				has_character_flag = mep_lastalliance_leader
				has_character_flag = mep_lastalliance_joined
			}
		}
		# Note: the following code should be replaced to reflect non-single-line inheritance...
		# the leader of the last alliance has died, you, current_heir, are now in command
		if = {
			limit = { has_character_flag = mep_lastalliance_leader }
			current_heir = {
				set_character_flag = mep_lastalliance_leader
				character_event = { id = lastalliance.21  days = 1}
			}
		}
		# you joined the last alliance, death breaks this alliance. Your heir is sent an invite to join...
		if = {
			limit = { has_character_flag = mep_lastalliance_joined }
			current_heir = {
				if = {
					limit = {  NOT = { has_character_flag = mep_lastalliance_joined }  }
					character_event = { id = lastalliance.22  days = 2 }
				}
			}	
		}
	}
	
	# I think you always need a possible option
	option = {
		trigger = {
			OR = {
				is_ruler = no
				has_global_flag = mep_lastalliance_saurondefeated
				NOR = {
					has_global_flag = mep_lastalliance_done2
					has_global_flag = mep_lastalliance_offensive
					has_global_flag = mep_lastalliance_counterstrike1
					has_global_flag = mep_lastalliance_counterstrike2
				}
				NOR = {
					has_character_flag = mep_lastalliance_leader
					has_character_flag = mep_lastalliance_joined
				}
			}
		}
		# Do nothing
	}
}
#------------------------------------------------
# you are leader of the last alliance now!
character_event = {
	id = lastalliance.21
	title = EVTTITlastalliance.21
	desc = EVTDESClastalliance.21
	picture = GFX_oath_of_eorl
	
	is_triggered_only = yes
	
	# Go ahead
	option = {
		name = EVTOPTAlastalliance.21
		# in CK2, alliances are personal, so to keep the alliance going, we need to re-make the alliance
		any_independent_ruler = {
			limit = { has_character_flag = mep_lastalliance_joined }
			opinion = {
				modifier = in_non_aggression_pact
				who = ROOT
				years = 15
			}
			reverse_opinion = {
				modifier = in_non_aggression_pact
				who = ROOT
				years = 15
			}
			add_alliance = { who = ROOT years = 15 }
		}
		# also, the leader is not supposed to have the joined flag, so we remove it, if it is there
		if = {
			limit = { has_character_flag = mep_lastalliance_joined }
			clr_character_flag = mep_lastalliance_joined
		}
	}
}
#-----------------------------------------------------------
# You are the successor of someone who joined the last alliance (still ongoing)
# will you carry on this alliance?
character_event = {
	id = lastalliance.22
	title = EVTTITlastalliance.22
	desc = EVTDESClastalliance.22
	picture = GFX_evt_sauronreturns
	
	is_triggered_only = yes
	
	immediate = {
		# does this successor meet the requirements?
		if = {
			limit = {
				independent = yes
				higher_real_tier_than  = count
				mercenary = no
				mep_is_good_side_trigger = yes
				NOT = { religion_group = religion_group_enyd }
				NOT = { culture = culture_valar }
				NOT = { culture = culture_enigma }
			}
			set_character_flag = mep_lastalliance_rejoin_allowed
		}
		# marking the alliance leader for use
		any_independent_ruler = {
			limit = { has_character_flag = mep_lastalliance_leader }
			save_event_target_as = mep_lastalliance_leader_target
		}
	}
	
	# Yes
	option = {
		name = EVTOPTAlastalliance.22
		trigger = {
			has_character_flag = mep_lastalliance_rejoin_allowed
			event_target:mep_lastalliance_leader_target = {
				NOT = { war_with = PREV }
			}
		}
		# AI never joins if their opinion of the caller is less than -20
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				NOT = { opinion = { who = FROM value = -20 } }
			}
		}
		# re-doing the alliance (hopefully no vassal wars between them underway...)
		event_target:mep_lastalliance_leader_target = {
			PREV = {
				opinion = {
					modifier = in_non_aggression_pact
					who = PREV
					years = 15
				}
				reverse_opinion = {
					modifier = in_non_aggression_pact
					who = PREV
					years = 15
				}
				add_alliance = { who = PREV years = 15 } 
			}
			# notifying the alliance leader of this
			character_event = { id = lastalliance.23  days = 6 }
		}
		clr_character_flag = mep_lastalliance_rejoin_allowed

	}
	# No
	option = {
		name = EVTOPTBlastalliance.22
		trigger = {
			has_character_flag = mep_lastalliance_rejoin_allowed
			event_target:mep_lastalliance_leader_target = {
				NOT = { war_with = PREV }
			}
		}
		# AI always joins if their opinion of the caller is better than 30
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				opinion = { who = FROM value = 30 }
			}
		}
		# notifying the alliance leader of this
		event_target:mep_lastalliance_leader_target = {
			character_event = { id = lastalliance.24  days = 6 }
		}
		clr_character_flag = mep_lastalliance_rejoin_allowed
	}
	
	# I don't meet the requirements
	option = {
		name = EVTOPTClastalliance.22
		trigger = { NOT = { has_character_flag = mep_lastalliance_rejoin_allowed } }
		# notifying the alliance leader of this
		event_target:mep_lastalliance_leader_target = {
			character_event = { id = lastalliance.25  days = 5 }
		}
	}
	
}
#------------------------------------------------
# Notification, Successor x will 'rejoin' last alliance
character_event = {
	id = lastalliance.23
	title = EVTTITlastalliance.23
	desc = EVTDESClastalliance.23
	picture = GFX_oath_of_eorl
	
	is_triggered_only = yes
	
	# Good!
	option = {
		trigger = {  NOT = { has_global_flag = mep_lastalliance_saurondefeated } }
		name = EVTOPTAlastalliance.23
	}
	# It's over now, but thanks!
	option = {
		trigger = {  has_global_flag = mep_lastalliance_saurondefeated }
		name = EVTOPTBlastalliance.23
	}
}
#------------------------------------------------
# Notification, Successor x will NOT 'rejoin' last alliance
character_event = {
	id = lastalliance.24
	title = EVTTITlastalliance.24
	desc = EVTDESClastalliance.24
	picture = GFX_evil_king
	
	is_triggered_only = yes
	
	# Bad!
	option = {
		trigger = { NOT = { has_global_flag = mep_lastalliance_saurondefeated } }
		name = EVTOPTAlastalliance.24
	}
	# It does not matter, now
	option = {
		trigger = { has_global_flag = mep_lastalliance_saurondefeated }
		name = EVTOPTBlastalliance.24
	}
}
#------------------------------------------------
# Notification, Successor x CANNOT 'rejoin' last alliance
character_event = {
	id = lastalliance.25
	title = EVTTITlastalliance.25
	desc = EVTDESClastalliance.25
	picture = GFX_evil_king
	
	is_triggered_only = yes
	
	# Sad!
	option = {
		name = EVTOPTAlastalliance.25
	}
}
#===========================================================================
# The End of Mordor ?
#-----------------------------------
# Event 40 : Near defeat, the Dark Lord decides whether to run, or attack the Enemy leaders personally
character_event = {
	id = lastalliance.40
	title = EVTTITlastalliance.40
	desc = EVTDESClastalliance.40
	picture = GFX_evil
	only_playable = yes
	war = yes
	has_global_flag = mep_lastalliance_offensive
	
	mean_time_to_happen = {
		months = 1
	}
	
	trigger = {
		# always = no  # disables this for now
		has_landed_title = e_barad_dur
		# The following should ensure that loosing at 90% or more against the last alliance triggers the event
		is_primary_war_defender = yes
		any_war = {
			using_cb = kingdom_good_attack_evil
			war_score = 90
			attacker = {
				OR = {
					has_character_flag = mep_lastalliance_leader
					has_landed_title = e_reunited_kingdom
					has_landed_title = e_gondor
				}
				war_with = PREVPREV
			}
		}
	}
	
	# I shall fight myself
	option = {
		name = EVTOPTAlastalliance.40
		trigger = {
			OR = { 
				character = 10016
				trait = balrog
			}
		}
		ai_chance = { factor = 9 }
		character_event = { id = lastalliance.41 }
		log = "@@ LastAlliance.40 A"
		
	}
	
	# Time to run...
	option = {
		name = EVTOPTBlastalliance.40
		ai_chance = { factor = 1 }
		character_event = { id = lastalliance.42 }
		log = "@@ LastAlliance.40 B"
	}
	
}
#-------------------------------------------------------------
# Event 41: a hidden event that sets up things for the combat 
character_event = {
	id = lastalliance.41
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		# mark the evil combatant
		save_event_target_as = mep_lastalliance_evil_combatant
		# mark good combatants
		any_war = {
			any_attacker = {
				# figure out who is going to be good combatant 1 (Human)
				# this assumes someone holding both an elven and a human kingdom is not going to happen
				if = {
					limit = { has_landed_title = e_reunited_kingdom }
					save_event_target_as = mep_lastalliance_good_combatant1
					set_character_flag = mep_lastalliance_combatant
				}
				if = {
					limit = {
						e_reunited_kingdom = { has_holder = no }
						has_landed_title = e_gondor
					}
					save_event_target_as = mep_lastalliance_good_combatant1
					set_character_flag = mep_lastalliance_combatant
				}
				if = {
					limit = {
						e_reunited_kingdom = { has_holder = no }
						e_gondor = { has_holder = no }
						has_landed_title = e_arnor
					}
					save_event_target_as = mep_lastalliance_good_combatant1
					set_character_flag = mep_lastalliance_combatant
				}
	
				# figure out who is going to be good combatant 2
				if = {
					# Gil-Galad or his successor
					limit = { has_landed_title = e_noldor }
					save_event_target_as = mep_lastalliance_good_combatant2
					set_character_flag = mep_lastalliance_combatant
					break = yes
				}
				if = {  # Durin IV or his successor
					limit = { has_landed_title = e_durins_folk }
					save_event_target_as = mep_lastalliance_good_combatant2
					set_character_flag = mep_lastalliance_combatant
					break = yes
				}
				if = {  # Amdír or Amroth or ??
					limit = { has_landed_title = k_elves }
					save_event_target_as = mep_lastalliance_good_combatant2
					set_character_flag = mep_lastalliance_combatant
					break = yes
				}
			}
		}
	}
	
	# Event dispatching
	option = {
		log = "@@ LastAlliance.41 A, [mep_lastalliance_good_combatant1.GetTitledName]"
		log = "@@ LastAlliance.41 B, [mep_lastalliance_good_combatant2.GetTitledName]"
		any_independent_ruler = {
			limit = {
				has_character_flag = mep_lastalliance_joined
				NOT = { has_character_flag = mep_lastalliance_combatant }
			}
			narrative_event = { id = lastalliance.44  days = 1 }
		}

		event_target:mep_lastalliance_good_combatant1 = {
			character_event = { id = lastalliance.46  days = 1 }
		}
		event_target:mep_lastalliance_good_combatant2 = {
			character_event = { id = lastalliance.46  days = 1 }
		}
	
		event_target:mep_lastalliance_evil_combatant = {
			character_event = { id = lastalliance.45  days = 2 }
		}
		log = "@@ LastAlliance.41 C"
		
	}
	
}
#---------------------------------------------------------------
# Event 42 : hidden event when the ruler runs, dispatches the notification Event 43, and launches the destroy Mordor event
character_event = {
	id = lastalliance.42
	hide_window = yes
	
	is_triggered_only = yes

	option = {
		log = "@@ LastAlliance.42 A"
		any_independent_ruler = {
			narrative_event = { id = lastalliance.43  days = 1 }
		}
		set_character_flag = mep_lastalliance_evilrun
		character_event = { id = lastalliance.62 }
		log = "@@ LastAlliance.42 B"
	}
}
#-----------------------------------------
# Event 43, notification event that the Evil Overlord of Mordor has abandoned Mordor and made a run for it.
narrative_event = {
	id = lastalliance.43
	title = EVTTITlastalliance.43
	desc = EVTDESClastalliance.43
	picture = GFX_battle_duel
	border = GFX_event_narrative_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTlastalliance.43
	}
}
#-----------------------------------
# Event 44, Event to last alliance leaders that The Dark Overlord (Sauron or a Balrog) is attacking personally
narrative_event = {
	id = lastalliance.44
	title = EVTTITlastalliance.44
	desc = {
		trigger = { FROM = { trait = balrog } }
		text = EVTDESClastalliance.44a
	}
	desc = {
		trigger = { FROM = { character = 10016 } }
		text = EVTDESClastalliance.44b
	}
	picture = GFX_evt_sauronreturns
	border = GFX_event_narrative_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTlastalliance.44
	}
}
#-----------------------------------
# Event 45, Event to ruler of e_barad_dur that he (she?) is attacking
character_event = {
	id = lastalliance.45
	title = EVTTITlastalliance.45
	desc = {
		trigger = { FROM = { trait = balrog } }
		text = EVTDESClastalliance.45a
	}
	desc = {
		trigger = { FROM = { character = 10016 } }
		text = EVTDESClastalliance.45b
	}
	picture = GFX_evt_sauronreturns
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTlastalliance.45
		character_event = { id = lastalliance.47 days = 2}
	}
}
#-----------------------------------
# Event 46, You will be fighting Sauron/the Balrog, how nice!
character_event = {
	id = lastalliance.46
	title = EVTTITlastalliance.46
	desc = {
		trigger = { FROM = { trait = balrog } }
		text = EVTDESClastalliance.46a
	}
	desc = {
		trigger = { FROM = { character = 10016 } }
		text = EVTDESClastalliance.46b
	}
	picture = GFX_evt_sauronreturns
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTlastalliance.46
	}
}
#-----------------------------------
# Event 47, hidden event to decide the outcome
character_event = {
	id = lastalliance.47
	hide_window = yes
	
	is_triggered_only = yes
	
	# Event dispatching
	option = {
		# no complicated checking here!
		random_list = {
			# Outcome 1, Evil wins complete victory!
			20 = {
				event_target:mep_lastalliance_evil_combatant = {
					character_event = { id = lastalliance.48 }
				}
				event_target:mep_lastalliance_good_combatant1 = {
					character_event = { id = lastalliance.49 }
				}
				event_target:mep_lastalliance_good_combatant2 = {
					character_event = { id = lastalliance.49 }
				}
				any_independent_ruler = {
					limit = {
						has_character_flag = mep_lastalliance_joined
						NOT = { has_character_flag = mep_lastalliance_combatant }
					}
					narrative_event = { id = lastalliance.50  days = 1 }
				}
			}
			# Outcome 2 'Historical' (Evil Guy loses, both Good Guys die)
			50 = {
				event_target:mep_lastalliance_good_combatant1 = {
					character_event = { id = lastalliance.51 }
				}
				event_target:mep_lastalliance_good_combatant2 = {
					character_event = { id = lastalliance.51 }
				}
				any_independent_ruler = {
					limit = {
						has_character_flag = mep_lastalliance_joined
						NOT = { has_character_flag = mep_lastalliance_combatant }
					}
					narrative_event = { id = lastalliance.55  days = 1 }
				}
				event_target:mep_lastalliance_evil_combatant = {
					if = {
						limit = { trait = balrog }
						character_event = { id = lastalliance.54 }
					}
					if = {
						limit = { character = 10016 }
						character_event = { id = lastalliance.53 }
					}
					
				}
			}
			# Outcome 3, Bad Guy Looses, Good Guy 1 killed
			10 = {
				event_target:mep_lastalliance_good_combatant2 = {
					character_event = { id = lastalliance.52 }
				}
				any_independent_ruler = {
					limit = {
						has_character_flag = mep_lastalliance_joined
						NOT = { has_character_flag = mep_lastalliance_combatant }
					}
					narrative_event = { id = lastalliance.56  days = 1 }
				}
				event_target:mep_lastalliance_evil_combatant = {
					if = {
						limit = { trait = balrog }
						character_event = { id = lastalliance.54 }
					}
					if = {
						limit = { character = 10016 }
						character_event = { id = lastalliance.53 }
					}
				}
				event_target:mep_lastalliance_good_combatant1 = {
					character_event = { id = lastalliance.51 }
				}
			}
			# Outcome 4, Bad Guy Looses, Good Guy 2 killed
			10 = {
				event_target:mep_lastalliance_good_combatant1 = {
					character_event = { id = lastalliance.52 }
				}
				any_independent_ruler = {
					limit = {
						has_character_flag = mep_lastalliance_joined
						NOT = { has_character_flag = mep_lastalliance_combatant }
					}
					narrative_event = { id = lastalliance.57  days = 1 }
				}
				event_target:mep_lastalliance_evil_combatant = {
					if = {
						limit = { trait = balrog }
						character_event = { id = lastalliance.54 }
					}
					if = {
						limit = { character = 10016 }
						character_event = { id = lastalliance.53 }
					}
				}
				event_target:mep_lastalliance_good_combatant2 = {
					character_event = { id = lastalliance.51 }
				}
			}
			# Outcome 5, Evil Dies, Good Guys win
			10 = {
				event_target:mep_lastalliance_evil_combatant = {
					if = {
						limit = { trait = balrog }
						character_event = { id = lastalliance.60 }
					}
					if = {
						limit = { character = 10016 }
						character_event = { id = lastalliance.59 }
					}
				}
				event_target:mep_lastalliance_good_combatant1 = {
					character_event = { id = lastalliance.58 }
				}
				event_target:mep_lastalliance_good_combatant2 = {
					character_event = { id = lastalliance.58 }
				}
				any_independent_ruler = {
					limit = {
						has_character_flag = mep_lastalliance_joined
						NOT = { has_character_flag = mep_lastalliance_combatant }
					}
					narrative_event = { id = lastalliance.61  days = 1 }
				}
			}
		}

	}
	
}
#+++++++++++++++++++++++++++++++++++++++++++
## Outcome 1 Bad Guy Wins
#------------------------------------
# Event 48 Event for the bad guy that he has won!
character_event = {
	id = lastalliance.48
	title = EVTTITlastalliance.48
	desc = {
		trigger = { trait = balrog }
		text = EVTDESClastalliance.48a
	}
	desc = {
		trigger = { character = 10016 }
		text = EVTDESClastalliance.48b
	}
	picture = GFX_evt_sauronreturns
	
	is_triggered_only = yes
	
	immediate = {
		# find a province to spawn troops
		# Barad-dûr (if not under siege)
		if = {
			limit = {
				c_barad_dur = {
					location = {
						NOT = { any_province_holding = { has_siege = yes } }
					}
				}
			}
			c_barad_dur = {
				location = {
					save_event_target_as = mep_lastalliance_evilspawnprov
				}
			}
			break = yes
		}
		# a neighboring province (if not under siege)
		if = {
			limit = {
				c_barad_dur = {
					location = {
						any_province_holding = { has_siege = yes }
						any_neighbor_province = {
							NOT = { any_province_holding = { has_siege = yes } }
						}
					}
				}
			}
			c_barad_dur = {
				location = {
					random_neighbor_province = {
						limit = { NOT = { any_province_holding = { has_siege = yes } } }
						save_event_target_as = mep_lastalliance_evilspawnprov
					}
				}
			}
			break = yes
		}
		# Barad-dûr (if all is under siege)
		c_barad_dur = {
			location = {
				save_event_target_as = mep_lastalliance_evilspawnprov
			}
		}

	}
	
	option = {
		name = EVTOPTlastalliance.48
		# make troll heavy infantry army
		create_random_soldier = {
			random_traits = yes
			dynasty = none
			religion = religion_olog
			culture = culture_troll
			trait = orc # for trolls as well
			trait = evil_side
			trait = heavy_infantry_leader
			trait = brilliant_strategist
			female = no
			age = 42
		}
		event_target:mep_lastalliance_evilspawnprov = {
			new_character = {
				spawn_unit = {
					province = PREV
					owner = PREVPREV
					disband_on_peace = yes
					attrition = 0
					maintenance_multiplier = 0.1
					troops = {
						heavy_infantry = { 10000 10000 }
					}
					reinforces = yes				
				}
				give_minor_title = title_commander
			}
		}
		# orc forces. note that the Uruk-Hai did not appear until late 3rd age.
		create_random_soldier = {
			random_traits = yes
			dynasty = none
			religion = religion_orkish
			culture = culture_orkish
			trait = orc
			trait = great_orc
			trait = evil_side
			trait = mountain_terrain_leader
			trait = brilliant_strategist
			female = no
			age = 39
		}
		event_target:mep_lastalliance_evilspawnprov = {
			new_character = {
				spawn_unit = {
					province = PREV
					owner = PREVPREV
					disband_on_peace = yes
					attrition = 0
					maintenance_multiplier = 0.1
					troops = {
						heavy_infantry = { 2800 2800 }
						light_infantry = { 5700 5700 }
						pikemen = { 2800 2800 }
						archers = { 5700 5700 }
						light_cavalry = { 2800 2800 } 
					}
					reinforces = yes				
				}
			}
		}
		create_random_soldier = {
			random_traits = yes
			dynasty = none
			religion = religion_orkish
			culture = culture_orkish
			trait = orc
			trait = great_orc
			trait = evil_side
			trait = organizer
			trait = brilliant_strategist
			female = no
			age = 41
		}
		event_target:mep_lastalliance_evilspawnprov = {
			new_character = {
				spawn_unit = {
					province = PREV
					owner = PREVPREV
					disband_on_peace = yes
					attrition = 0
					maintenance_multiplier = 0.1
					troops = {
						heavy_infantry = { 2800 2800 }
						light_infantry = { 5700 5700 }
						pikemen = { 2800 2800 }
						archers = { 5700 5700 }
						light_cavalry = { 2800 2800 } 
					}
					reinforces = yes				
				}
			}
		}
		create_random_soldier = {
			random_traits = yes
			dynasty = none
			religion = religion_orkish
			culture = culture_orkish
			trait = orc
			trait = great_orc
			trait = evil_side
			trait = aggressive_leader
			trait = brilliant_strategist
			female = no
			age = 36
		}
		event_target:mep_lastalliance_evilspawnprov = {
			new_character = {
				spawn_unit = {
					province = PREV
					owner = PREVPREV
					disband_on_peace = yes
					attrition = 0
					maintenance_multiplier = 0.1
					troops = {
						heavy_infantry = { 2800 2800 }
						light_infantry = { 5700 5700 }
						pikemen = { 2800 2800 }
						archers = { 5700 5700 }
						light_cavalry = { 2800 2800 } 
					}
					reinforces = yes					
				}
			}
		}
		# this orc army will not be disbanded on peace, for that reason it does not reinforce
		create_random_soldier = {
			random_traits = yes
			dynasty = none
			religion = religion_orkish
			culture = culture_orkish
			trait = orc
			trait = great_orc
			trait = evil_side
			trait = siege_leader
			trait = brilliant_strategist
			female = no
			age = 48
		}
		event_target:mep_lastalliance_evilspawnprov = {
			new_character = {
				spawn_unit = {
					province = PREV
					owner = PREVPREV
					disband_on_peace = no
					attrition = 0
					maintenance_multiplier = 0.1
					troops = {
						heavy_infantry = { 2800 2800 }
						light_infantry = { 5700 5700 }
						pikemen = { 2800 2800 }
						archers = { 5700 5700 }
						light_cavalry = { 2800 2800 } 
					}			
				}
			}
		}
		# boost morale of all evil troops
		any_army = { morale = +1 }
		any_vassal  = {
			any_army = { morale = +1 }
		}
		# top up garrisons and levies
		any_realm_province = {
			any_province_holding = {
				limit = { is_occupied = no}
				refill_holding_levy = yes
			}
		}
		# get money
		wealth = 2000
		# set flags
		hidden_tooltip = {
			clr_global_flag = mep_lastalliance_offensive
			set_global_flag = mep_lastalliance_counterstrike1
			character_event = { id = lastalliance.76  days = 75 }  # give 75 days to improve things before unlocking possibly surrender
		}
	}
}
#------------------------------------
# Event 49 : Event to good guy participants that they have lost (and kill them)
character_event = {
	id = lastalliance.49
	title = EVTTITlastalliance.49
	desc = {
		trigger = { event_target:mep_lastalliance_evil_combatant = { trait = balrog } }
		text = EVTDESClastalliance.49a
	}
	desc = {
		trigger = { event_target:mep_lastalliance_evil_combatant = { character = 10016 } }
		text = EVTDESClastalliance.49b
	}
	picture = GFX_evt_death
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTlastalliance.49
		event_target:mep_lastalliance_evil_combatant = {
			# bad guy takes artifact weapons
			any_artifact = {
				limit = {
					OR = {
						has_artifact_flag = sword
						has_artifact_flag = spear
						has_artifact_flag = axe
					}
				}
				transfer_artifact = {
					from = PREVPREV
					to = PREV
				}
			}
			# good guys: demoralize thier armies, then kill them
			PREV = {
				any_army = {
					morale = -0.5
				}
				death = {
					death_reason = death_duel
					killer = PREV
				}
			}
		}
		
	}
}
#------------------------------------
# Event 50 : Notification to Good-Guy leaders (not participating) of the defeat.
narrative_event = {
	id = lastalliance.50
	title = EVTTITlastalliance.50
	desc = EVTDESClastalliance.50
	picture = GFX_evil
	border = GFX_event_narrative_frame_war
	
	is_triggered_only = yes
	
	# Oh No!
	option = {
		name = EVTOPTlastalliance.50
		any_army = {
			morale = -0.5
		}
		random = {
			chance = 50
			add_trait = depressed
		}
	}
}
#+++++++++++++++++++++++++++++++++++++++++++
## Shared events
#------------------------------------
# Event 51 : You have won, but you will not survive
character_event = {
	id = lastalliance.51
	title = EVTTITlastalliance.51
	desc = {
		trigger = { event_target:mep_lastalliance_evil_combatant = { trait = balrog } }
		text = EVTDESClastalliance.51a
	}
	desc = {
		trigger = { event_target:mep_lastalliance_evil_combatant = { character = 10016 } }
		text = EVTDESClastalliance.51b
	}
	picture = GFX_evt_death
	
	is_triggered_only = yes
	
	# Could be worse
	option = {
		name = EVTOPTlastalliance.51
		# handling artifact destruction
		if = {
			limit = { has_artifact = aeglos }
			destroy_artifact = aeglos
		}
		if = {
			limit = { has_artifact = narsil_elendil }
			destroy_artifact = narsil_elendil
			current_heir = { add_trait = narsil }
		}
		# be killed!
		event_target:mep_lastalliance_evil_combatant = {
			PREV = {
				clr_character_flag = mep_lastalliance_combatant
				death = {
					death_reason = death_duel
					killer = PREV
				}
			}
		}
		
	}
}
#------------------------------------
# Event 52 : You have won, but your partner will not survive
character_event = {
	id = lastalliance.52
	title = EVTTITlastalliance.52
	desc = {
		trigger = { event_target:mep_lastalliance_evil_combatant = { trait = balrog } }
		text = EVTDESClastalliance.52a
	}
	desc = {
		trigger = { event_target:mep_lastalliance_evil_combatant = { character = 10016 } }
		text = EVTDESClastalliance.52b
	}
	picture = GFX_evt_death
	
	is_triggered_only = yes
	
	# Could be worse
	option = {
		name = EVTOPTlastalliance.52
		add_trait = wounded
		clr_character_flag = mep_lastalliance_combatant
		
	}
}
#------------------------------------
# Event 53 : Sauron Loses
character_event = {
	id = lastalliance.53
	title = EVTTITlastalliance.53
	desc = EVTDESClastalliance.53
	picture = GFX_evil
	
	is_triggered_only = yes
	
	# Damn
	option = {
		name = EVTOPTlastalliance.53
		character_event = { id = lastalliance.62 }
	}
}
#------------------------------------
# Event 54 : Balrog Loses
character_event = {
	id = lastalliance.54
	title = EVTTITlastalliance.54
	desc = EVTDESClastalliance.54
	picture = GFX_evt_worship_balrog
	
	is_triggered_only = yes
	
	# Damn
	option = {
		name = EVTOPTlastalliance.54
		character_event = { id = lastalliance.62 }
	}
}
#+++++++++++++++++++++++++++++++++++++++++++
## Outcome 2 : Bad Guy Loses, both Good guys killed
#------------------------------------
# Event 55 : Notification to Good-Guy leaders (not participating) of the victory.
narrative_event = {
	id = lastalliance.55
	title = EVTTITlastalliance.55
	desc = EVTDESClastalliance.55
	picture = GFX_evt_death
	border = GFX_event_narrative_frame_war
	
	is_triggered_only = yes
	
	# Good!
	option = {
		name = EVTOPTlastalliance.55
	}
}
#+++++++++++++++++++++++++++++++++++++++++++
## Outcome 3 : Bad Guy Loses, Good Guy 1 Killed
#------------------------------------
# Event 56 : Notification to Good-Guy leaders (not participating) of the victory.
narrative_event = {
	id = lastalliance.56
	title = EVTTITlastalliance.56
	desc = EVTDESClastalliance.56
	picture = GFX_evt_death
	border = GFX_event_narrative_frame_war
	
	is_triggered_only = yes
	
	# Good!
	option = {
		name = EVTOPTlastalliance.56
	}
}
#+++++++++++++++++++++++++++++++++++++++++++
## Outcome 4 : Bad Guy Loses, Good Guy 2 Killed
#------------------------------------
# Event 57 : Notification to Good-Guy leaders (not participating) of the victory.
narrative_event = {
	id = lastalliance.57
	title = EVTTITlastalliance.57
	desc = EVTDESClastalliance.57
	picture = GFX_evt_death
	border = GFX_event_narrative_frame_war
	
	is_triggered_only = yes
	
	# Good!
	option = {
		name = EVTOPTlastalliance.57
	}
}
#+++++++++++++++++++++++++++++++++++++++++++
## Outcome 5 : Bad Guy Loses, Good Guys survive
#------------------------------------
# Event 58 : You have won the fight
character_event = {
	id = lastalliance.58
	title = EVTTITlastalliance.58
	desc = {
		trigger = { event_target:mep_lastalliance_evil_combatant = { trait = balrog } }
		text = EVTDESClastalliance.58a
	}
	desc = {
		trigger = { event_target:mep_lastalliance_evil_combatant = { character = 10016 } }
		text = EVTDESClastalliance.58b
	}
	picture = GFX_battle_duel
	
	is_triggered_only = yes
	
	# Wow
	option = {
		name = EVTOPTlastalliance.58
		add_trait = wounded
		clr_character_flag = mep_lastalliance_combatant
	}
}
#------------------------------------
# Event 59 : Sauron Loses
character_event = {
	id = lastalliance.59
	title = EVTTITlastalliance.59
	desc = EVTDESClastalliance.59
	picture = GFX_evil
	
	is_triggered_only = yes
	
	# Damn
	option = {
		name = EVTOPTlastalliance.59
		character_event = { id = lastalliance.62 }
	}
}
#------------------------------------
# Event 60 : Balrog Loses
character_event = {
	id = lastalliance.60
	title = EVTTITlastalliance.60
	desc = EVTDESClastalliance.60
	picture = GFX_evt_worship_balrog
	
	is_triggered_only = yes
	
	# Damn
	option = {
		name = EVTOPTlastalliance.60
		character_event = { id = lastalliance.62 }
	}
}
#------------------------------------
# Event 61 : Notification to Good-Guy leaders (not participating) of the victory.
narrative_event = {
	id = lastalliance.61
	title = EVTTITlastalliance.61
	desc = EVTDESClastalliance.61
	picture = GFX_elf_meeting
	border = GFX_event_narrative_frame_war
	
	is_triggered_only = yes
	
	# Good!
	option = {
		name = EVTOPTlastalliance.61
	}
}
#+++++++++++++++++++++++++++++++++++++++++++
# Post Outcome
#------------------------------------
# Event 62 : Massive Destroy-Mordor Event
character_event = {
	id = lastalliance.62	
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {}
	
	# Whoa...
	option = {
		# set some flags
		hidden_tooltip = {
			clr_global_flag = mep_lastalliance_offensive
			clr_global_flag = mep_lastalliance_counterstrike1
			clr_global_flag = mep_lastalliance_counterstrike2
			set_global_flag = mep_lastalliance_saurondefeated
		}
		# end war? (it seems you can't save a war scope as an event_target)
		#any_war = {
		#	limit = {
		#		using_cb = kingdom_good_attack_evil
		#		attacker = {
		#			OR = {
		#				has_character_flag = mep_lastalliance_leader
		#				has_landed_title = e_reunited_kingdom
		#				has_landed_title = e_gondor
		#			}
		#		}
		#	}
		#	end_war = success
		#}
		# cede occupied holdings to occupiers (not sure if this is the best option)
		any_realm_province = {
			any_province_holding = {
				controller = {
					if = {
						limit = {
							NOR = {
								character = ROOT
								is_liege_or_above  = ROOT
							}
						}
						gain_title = PREV
					}
				}
			}
		}
		# destroy vassal kingdoms
		any_vassal = {
			limit = { tier = king }
			any_demesne_title = {
				if = {
					limit = { tier = king }
					destroy_landed_title = THIS
				}
			}
		}
		# get rid of tributaries
		any_independent_ruler = {
			limit = { pays_tribute_to = ROOT }
			suzerain = { remove_tributary = ROOT }
        }
		# any remaining vassals go independent
		any_vassal = {
			limit = { higher_tier_than = baron }
			set_defacto_liege = THIS
		}
		# destroy e_barad_dur
		e_barad_dur = {
			destroy_landed_title = THIS
		}
		# end war? (it seems you can't save a war scope as an event_target)
		any_war = {
			limit = {
				using_cb = kingdom_good_attack_evil
				attacker = {
					OR = {
						has_character_flag = mep_lastalliance_leader
						has_landed_title = e_reunited_kingdom
						has_landed_title = e_gondor
					}
				}
			}
			end_war = invalid
		}
		# just incase
		if = {
			limit = { has_landed_title = k_mordor }
			k_mordor = { destroy_landed_title = THIS }
		}
		# destroy duchies
		any_demesne_title = {
			limit = { tier = duke }
			destroy_landed_title = THIS
		}
		# abdicate. I'm hopeful that the heir is logical, instead of needing scripted disposal of remining territories
		recalc_succession = yes
		abdicate = yes
		# decide fate of sauron/balrog/whatever	
		# the leader is running, go to the exile place!
		if = {
			limit = { has_character_flag = mep_lastalliance_evilrun }
			activate_title = { title = d_sauron_exile status = yes }
			d_sauron_exile = { gain_title = PREV }
			clr_character_flag = mep_lastalliance_evilrun
			
		}
		# otherwise...
		# Case Balrog. I will for now ignore the possibility that the Balrog has the ring
		if = {
			limit = {
				NOT = { has_character_flag = mep_lastalliance_evilrun }
				trait = balrog
			}
			death = { death_reason = death_duel }
		}
		# Case Sauron
		if = {
			limit = {
				NOT = { has_character_flag = mep_lastalliance_evilrun }
				character = 10016
			}
			# The alliance leader will decide the fate of the ring
			any_independent_ruler = {
				limit = { has_character_flag = mep_lastalliance_leader }
				character_event = { id = lastalliance.63 }
			}
			any_independent_ruler = {
				limit = { has_character_flag = mep_lastalliance_joined }
				narrative_event = {	id = lastalliance.65 }
			}
		}
		any_independent_ruler = {
			limit = { has_character_flag = mep_lastalliance_leader }
			character_event = { id = lastalliance.73  days = 5 }
		}
		
	}
}
#------------------------------------
# Event 63 : What to do with the ring?
character_event = {
	id = lastalliance.63
	title = EVTTITlastalliance.63
	desc = EVTDESClastalliance.63
	picture = GFX_evt_ring_craft
	
	is_triggered_only = yes
	
	# Keep the Ring (Elendil)
	option = {
		name = EVTOPTAlastalliance.63
		trigger = { character = 12135 }
		ai_chance = { factor = 0.3 }
		event_target:mep_lastalliance_evil_combatant = {
			mep_transfer_onering_to_root = yes
			character_event = { id = lastalliance.64 }
		}
		
	}
	
	# Keep the Ring (Not-Elendil)
	option = {
		name = EVTOPTBlastalliance.63
		trigger = { NOT = {character = 12135 } }
		ai_chance = { factor = 2 }
		event_target:mep_lastalliance_evil_combatant = {
			mep_transfer_onering_to_root = yes
			character_event = { id = lastalliance.64 }
		}
		
	}
	
	# Destroy the Ring
	option = {
		name = EVTOPTClastalliance.63
		ai_chance = { factor = 1 }
		destroy_artifact = artifact_ring
		add_trait = ringbearer1
		event_target:mep_lastalliance_evil_combatant = {
			death = { death_reason = death_destroyed_alongside_one_ring  killer = PREV }
		}
		hidden_tooltip = {
			any_character = {
				limit = { trait = nazgul }
				character_event = { id = frodo.18  days = 2}
			}
		}
		any_independent_ruler = {
			narrative_event = { id = lastalliance.67  days = 7 }
		}
		
	}
}
#------------------------------------
# Event 64 : What to do with Sauron if the ring is not destroyed
character_event = {
	id = lastalliance.64
	title = EVTTITlastalliance.64
	desc = EVTDESClastalliance.64
	picture = GFX_sauron_commands
	
	is_triggered_only = yes
	
	# Could be worse..!
	option = {
		name = EVTOPTlastalliance.64
		add_trait = spiritform
		activate_title = { title = d_sauron_exile status = yes }
		d_sauron_exile = { gain_title = PREV }
	}
}
#-------------------------------------
# Event 65 : Notify about ring
narrative_event = {
	id = lastalliance.65
	title = EVTTITlastalliance.65
	desc = EVTDESClastalliance.65
	picture = GFX_evt_ring_craft
	border = GFX_event_narrative_frame_war
	
	is_triggered_only = yes
	
	# It should be destroyed!
	option = {
		name = EVTOPTlastalliance.65
	}
}
#------------------------------------
# Event 66 : Notify x will keep the ring (currently unused: after all Boromir hadn't known 
# that Isildur kept the ring...)
narrative_event = {
	id = lastalliance.66
	title = EVTTITlastalliance.66
	desc = EVTDESClastalliance.66
	picture = GFX_evt_ring_craft
	border = GFX_event_narrative_frame_war
	
	is_triggered_only = yes
	
	# I've got a bad feeling about this
	option = {
		name = EVTOPTlastalliance.66
	}
}
#------------------------------------
# Event 67 : Notify that the ring is destroyed
narrative_event = {
	id = lastalliance.67
	title = EVTTITlastalliance.67
	desc = EVTDESClastalliance.67
	picture = GFX_evil
	border = GFX_event_narrative_frame_war
	
	is_triggered_only = yes
	
	# Good
	option = {
		name = EVTOPTlastalliance.67
	}
}
#===============================================================================================
# Event 70. Called from on_war_ended_defeat , meant to mark the end of the war and the last alliance if sauron wins
# for now, just sets some flags and calls an Alliance-destroying event...
character_event = {
	id = lastalliance.70
	hide_window = yes
	
	is_triggered_only = yes
	
	option = {
		if = {
			# The war is the one launched by lastalliance.10
			limit = {
				OR = {
					has_global_flag = mep_lastalliance_offensive
					has_global_flag = mep_lastalliance_counterstrike1
					has_global_flag = mep_lastalliance_counterstrike2
				}
				ROOT = { has_landed_title = e_barad_dur }
				FROM = {
					has_character_flag = mep_lastalliance_leader
				}
				using_cb = kingdom_good_attack_evil			
			}
			# what gets done...
			set_global_flag = mep_lastalliance_sauronwon
			clr_global_flag = mep_lastalliance_offensive
			clr_global_flag = mep_lastalliance_counterstrike1
			clr_global_flag = mep_lastalliance_counterstrike2
			FROM = {
				character_event = { id = lastalliance.71 }
			}
			
			
		}
	}
}
#-------------------------------------------------------------
# Event 71 : The last alliance has failed. It falls apart
character_event = {
	id = lastalliance.71
	title = EVTTITlastalliance.71
	desc = EVTDESClastalliance.71
	picture = GFX_evil
	
	is_triggered_only = yes
	trigger = { is_alive = yes }
	
	option = {
		name = EVTOPTlastalliance.71
		# send notification that the alliance is over
		custom_tooltip = {
			text = TT_lastalliance71a
			any_independent_ruler = {
				limit = { has_character_flag = mep_lastalliance_joined }
				narrative_event = { id = lastalliance.72 days = 2}
			}
		}
		# Remove the leader of the last allance flag
		custom_tooltip = {
			text = TT_lastalliance71b
			clr_character_flag = mep_lastalliance_leader
		}
	}

}
# Event 72 : notification event that last alliance falls apart.
narrative_event = {
	id = lastalliance.72
	title = EVTTITlastalliance.72
	desc = {
		trigger = {
			NOT = { is_close_relative = FROM }
		}
		text = EVTDESClastalliance.72a
	}
	desc = {
		trigger = {
			NOT = { is_close_relative = FROM }
		}
		text = EVTDESClastalliance.72b
	}
	picture = GFX_evil
	border = GFX_event_narrative_frame_war
	
	is_triggered_only = yes
	trigger = { is_alive = yes }
	
	immediate = {
		clr_character_flag = mep_lastalliance_joined
	}
	
	# Just in case the ex-leader died in between him sending and the receiver receiving this event...
	option = {
		name = EVTOPTAlastalliance.72
		trigger = { FROM = { is_alive = no } }
	}
	
	# Break the Alliance (AI will always do unless he/she is a close relative of FROM (the former Alliance leader))
	option = {
		name = EVTOPTBlastalliance.72
		trigger = { FROM = { is_alive = yes } }
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				is_close_relative = FROM
			}
		}
		break_alliance = FROM
	}
	
	# Keep the alliance (AI will always do IF he/she is a close relative of FROM (the former Alliance leader))
	option = {
		name = EVTOPTClastalliance.72
		trigger = { FROM = { is_alive = yes } }
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				NOT = { is_close_relative = FROM }
			}
		}
	}

}
#-------------------------------------------------------------
# Event 73 : The last alliance has won, destroy it
character_event = {
	id = lastalliance.73
	title = EVTTITlastalliance.73
	desc = EVTDESClastalliance.73
	picture = GFX_evt_prancingpony
	
	is_triggered_only = yes
	trigger = { is_alive = yes }
	
	option = {
		name = EVTOPTlastalliance.73
		# send notification that the alliance is over
		custom_tooltip = {
			text = TT_lastalliance73a
			any_independent_ruler = {
				limit = { has_character_flag = mep_lastalliance_joined }
				narrative_event = { id = lastalliance.74 days = 2 }
			}
		}
		# Remove the leader of the last allance flag
		custom_tooltip = {
			text = TT_lastalliance71b
			clr_character_flag = mep_lastalliance_leader
		}
	}

}
# Event 74 : notification event that the last alliance is no longer necessary
narrative_event = {
	id = lastalliance.74
	title = EVTTITlastalliance.74
	desc = {
		trigger = {
			NOT = { is_close_relative = FROM }
		}
		text = EVTDESClastalliance.74a
	}
	desc = {
		trigger = {
			NOT = { is_close_relative = FROM }
		}
		text = EVTDESClastalliance.74b
	}
	picture = GFX_evil
	border = GFX_event_narrative_frame_war
	
	is_triggered_only = yes
	trigger = { is_alive = yes }
	
	immediate = {
		clr_character_flag = mep_lastalliance_joined
	}
	
	# Just in case the ex-leader died in between him sending and the receiver receiving this event...
	option = {
		name = EVTOPTAlastalliance.74
		trigger = { FROM = { is_alive = no } }
	}
	
	# Break the Alliance (AI will always do unless he/she is a close relative of FROM (the former Alliance leader))
	option = {
		name = EVTOPTBlastalliance.74
		trigger = { FROM = { is_alive = yes } }
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				is_close_relative = FROM
			}
		}
		break_alliance = FROM
	}
	
	# Keep the alliance (AI will always do IF he/she is a close relative of FROM (the former Alliance leader))
	option = {
		name = EVTOPTClastalliance.74
		trigger = { FROM = { is_alive = yes } }
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				NOT = { is_close_relative = FROM }
			}
		}
	}

}
#-------------------------------------------------------------
# Event 75. Called from on_war_ended_victory, meant to clean up some flags
character_event = {
	id = lastalliance.75
	hide_window = yes
	
	is_triggered_only = yes
	
	option = {
		if = {
			# The war is the one launched by lastalliance.10
			limit = {
				ROOT = { has_landed_title = e_barad_dur }
				FROM = {
					has_character_flag = mep_lastalliance_leader
				}
				using_cb = kingdom_good_attack_evil
			}
			# cleaning up global flags. only really happens if Mordor is defeated before the proper events kick in
			if = {
				limit = {
					OR = {
						has_global_flag = mep_lastalliance_offensive
						has_global_flag = mep_lastalliance_counterstrike1
						has_global_flag = mep_lastalliance_counterstrike2
					}
				}
				clr_global_flag = mep_lastalliance_offensive
				clr_global_flag = mep_lastalliance_counterstrike1
				clr_global_flag = mep_lastalliance_counterstrike2
				# I should probably make and insert a call to a special destroy-mordor event that is 'post-defeat'
				set_global_flag = mep_sauron_defeated
				FROM = {
					character_event = { id = lastalliance.73  days = 2}
				}
			}			
			
		}
	}
	
}
#=====================================================================================
# Event 75 (really just a timer)
character_event = {
	id = lastalliance.76
	hide_window = yes
	
	is_triggered_only = yes
	
	# the war is still ongoing
	option = {
		if = {
			limit = {
				has_global_flag = mep_lastalliance_counterstrike1
			}
			clr_global_flag = mep_lastalliance_counterstrike1
			set_global_flag = mep_lastalliance_counterstrike2
		}
	}
}
#---------------------------------------------
# Event.76, for e_barad_dur: you have won the duel and launched your great counterstrike, but you are still loosing!
character_event = {
	id = lastalliance.77
	title = EVTTITlastalliance.77
	desc = EVTDESClastalliance.77
	picture = GFX_evt_battle_scene
	only_playable = yes
	war = yes
	has_global_flag = mep_lastalliance_counterstrike2
	
	mean_time_to_happen = {
		days = 15
	}
	
	trigger = {
		# always = no  # disables this for now
		has_landed_title = e_barad_dur
		# The following should ensure that loosing at 90% or more against the last alliance triggers the event
		is_primary_war_defender = yes
		any_war = {
			using_cb = kingdom_good_attack_evil
			war_score = 90
			attacker = {
				OR = {
					has_character_flag = mep_lastalliance_leader
					has_landed_title = e_reunited_kingdom
					has_landed_title = e_gondor
				}
				war_with = PREVPREV
			}
		}
	}
	
	# Time to run...
	option = {
		name = EVTOPTBlastalliance.77
		ai_chance = { factor = 1 }
		character_event = { id = lastalliance.42 }
		log = "@@ lastalliance.77 A"
	}
	
}




